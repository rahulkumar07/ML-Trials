#metadata: information about the flow
#  platformVersion: the version of the bots platform that this flow was written to work with 
metadata:
  platformVersion: 1.0
main: true
name: fb_helper_bot
#context: Define the variables which will used throughout the dialog flow here.
context:
  variables:
    source_Location: "string"
    destin_Location: "string"
    requestor_name: "string"
    requestor_contact: "string"
    ride_type: "string"
    requestor_timePreference: "string"
    poolConfirmation : "string"
    iResult: "nlpresult"
    
    
#The syntax for defining the variables is variablename: "variableType".
# The "variableType" can be defined as a primitive type ("int", "string", "boolean"), "list", or an entity name. A variable can also hold the results returned by the Intent Engine. For these variables, the "variableType" must be "nlpresult" (for example, iResult: "nlpresult").
    greeting: "string"
    name: "string"
#states is where you can define the various states within your flow.
# The syntax for defining a state is
# statename:
#   component:Specify the component you want to use. This can be either a Built-In or custom component.
#   properties:
#     property1: "value" (These are the properties to the specified component
#   transitions: You can specify one of the following four
#     next: Specify the state you want to execute next after this state. By default it will execute the state specified after this
#     error: Specify the state you want to execute in case the component encounters any error in execution.
#     actions: You can handle various actions returned by the components here the syntax is actionName: "statename"
#        action1: state1
#     return: "done" You can exit the flow using the return statement

states:
  askName:
    component: "System.Text"
    properties:
      prompt: "Hi there! Let us know your official name for the carpool?"
      variable: "requestor_name"
  askRideType:
    component: "System.List"
    properties:
      options: "Request a carpool,Offer a carpool"
      prompt: "Let us know your choice"
      variable: "ride_type"      
  askSource:
    component: "System.Text"
    properties:
      prompt: "Welcome ${requestor_name.value}, Let us know the source location for your carpool?"
      variable: "source_Location"
  askDestination:
    component: "System.Text"
    properties:
      prompt: "Thanks ${requestor_name.value}, tell us the destination location for the carpool?"
      variable: "destin_Location"       
  asktTime:
    component: "System.Text"
    properties:
      prompt: "what is your preferred timing for the same?"
      variable: "requestor_timePreference"
    transitions:
      next: "travelHelp"  

  intent:
    component: "System.Intent"
    properties:
      variable: "iResult"
      confidenceThreshold: 0.4
      confidenceWinMargin: 0.3
    transitions:
      actions:
        #LinuxHelp: "linuxHelp"
        #WeatherHelp: "weatherHelp"
        Travel: "travelHelp"
        unresolvedIntent: "unresolved"    
        
  travelHelp:
    component: "System.List"
    properties:
      options: "Yes,No"
      prompt: "Your carpool is from ${source_Location.value} to ${destin_Location.value} around ${requestor_timePreference.value} , right?"
      variable: "poolConfirmation"
    transitions:
      next: "PoolBookingConfirmation"

  PoolBookingConfirmation:
    component: "System.ConditionEquals"
    properties:
      variable: "poolConfirmation"
      value: "Yes"
    transitions:
      actions:
        equal: "gotoBookRide"
        notequal: "askRideType"


  gotoBookRide:
    component: "System.Output"
    properties:
      text: "Booking is in progress please wait"
    transitions: {}  

  unresolved:
    component: "System.Output"
    properties:
      text: "Sorry, I didn't understand that, can you please ask again?"
#      keepTurn: true
    transitions:
      return: "unresolved"        
