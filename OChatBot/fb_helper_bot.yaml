#metadata: information about the flow
#  platformVersion: the version of the bots platform that this flow was written to work with
metadata:
  platformVersion: 1.0
main: true
name: fb_helper_bot
#context: Define the variables which will used throughout the dialog flow here.
context:
  variables:
    source_Location: "TravelLocation"
    destin_Location: "TravelLocation"
    iResult: "nlpresult"

#The syntax for defining the variables is variablename: "variableType".
# The "variableType" can be defined as a primitive type ("int", "string", "boolean"), "list", or an entity name. A variable can also hold the results returned by the Intent Engine. For these variables, the "variableType" must be "nlpresult" (for example, iResult: "nlpresult").
    greeting: "string"
    name: "string"
#states is where you can define the various states within your flow.
# The syntax for defining a state is
# statename:
#   component:Specify the component you want to use. This can be either a Built-In or custom component.
#   properties:
#     property1: "value" (These are the properties to the specified component
#   transitions: You can specify one of the following four
#     next: Specify the state you want to execute next after this state. By default it will execute the state specified after this
#     error: Specify the state you want to execute in case the component encounters any error in execution.
#     actions: You can handle various actions returned by the components here the syntax is actionName: "statename"
#        action1: state1
#     return: "done" You can exit the flow using the return statement

states:
#  askGreeting:
#    component: "System.List"
#    properties:
#      options: "Hello!, Ola!, Vannakam!, Namaste!"
#      prompt: "Hi there! What would you like me to echo back?"
#      variable: "greeting"
#  askName:
#    component: "System.Text"
#    properties:
#     prompt: "What is your name?"
#     variable: "name"
#  start:
#    component: "System.Output"
#    properties:
#      text: "${greeting.value}  ${name.value}, where do you want to go?"
#    transitions:
#      return: "done"
  intent:
    component: "System.Intent"
    properties:
      variable: "iResult"
      confidenceThreshold: 0.4
      confidenceWinMargin: 0.3
    transitions:
      actions:
        #LinuxHelp: "linuxHelp"
        #WeatherHelp: "weatherHelp"
        Travel: "travelHelp"
        unresolvedIntent: "unresolved"

  travelHelp:
    component: "System.SetVariable"
    properties:
      variable: "source_Location"
      value: "${iResult.value.entityMatches['source_Location'][0]}"
    transitions: {}
  askLocation1:
    component: "System.List"
    properties:
      options:
  unresolved:
    component: "System.Output"
    properties:
      text: "Sorry, I didn't understand that, can you please ask again?"
#      keepTurn: true
    transitions:
      return: "unresolved"        
